
Build Error
Failed to compile

Next.js (14.2.16) is outdated (learn more)
./app/profile/[username]/page.tsx
Error: 
  × the name `Avatar` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:1:1]
   1 │ import { createLegacyClient } from '@/lib/supabase-server'
   2 │ import { notFound, redirect } from 'next/navigation'
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·          ───┬──
     ·             ╰── previous definition of `Avatar` here
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·          ───┬──
     ·             ╰── `Avatar` redefined here
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
     ╰────

  × the name `AvatarFallback` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:1:1]
   1 │ import { createLegacyClient } from '@/lib/supabase-server'
   2 │ import { notFound, redirect } from 'next/navigation'
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·                  ───────┬──────
     ·                         ╰── previous definition of `AvatarFallback` here
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·                  ───────┬──────
     ·                         ╰── `AvatarFallback` redefined here
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
     ╰────

  × the name `AvatarImage` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:1:1]
   1 │ import { createLegacyClient } from '@/lib/supabase-server'
   2 │ import { notFound, redirect } from 'next/navigation'
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·                                  ─────┬─────
     ·                                       ╰── previous definition of `AvatarImage` here
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
     ·                                  ─────┬─────
     ·                                       ╰── `AvatarImage` redefined here
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
     ╰────

  × the name `Button` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:1:1]
   1 │ import { createLegacyClient } from '@/lib/supabase-server'
   2 │ import { notFound, redirect } from 'next/navigation'
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
     ·          ───┬──
     ·             ╰── previous definition of `Button` here
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
     ·          ───┬──
     ·             ╰── `Button` redefined here
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ╰────

  × the name `Card` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:3:1]
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·          ──┬─
     ·            ╰── previous definition of `Card` here
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·          ──┬─
     ·            ╰── `Card` redefined here
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
     ╰────

  × the name `CardContent` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:3:1]
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                ─────┬─────
     ·                     ╰── previous definition of `CardContent` here
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                ─────┬─────
     ·                     ╰── `CardContent` redefined here
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
     ╰────

  × the name `CardDescription` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:3:1]
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                             ───────┬───────
     ·                                    ╰── previous definition of `CardDescription` here
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                             ───────┬───────
     ·                                    ╰── `CardDescription` redefined here
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
     ╰────

  × the name `CardHeader` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:3:1]
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                                              ─────┬────
     ·                                                   ╰── previous definition of `CardHeader` here
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                                              ─────┬────
     ·                                                   ╰── `CardHeader` redefined here
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
     ╰────

  × the name `CardTitle` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:3:1]
   3 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                                                          ────┬────
     ·                                                              ╰── previous definition of `CardTitle` here
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ·                                                          ────┬────
     ·                                                              ╰── `CardTitle` redefined here
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
     ╰────

  × the name `Separator` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:4:1]
   4 │ import { Button } from '@/components/ui/button'
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
     ·          ────┬────
     ·              ╰── previous definition of `Separator` here
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
     ·          ────┬────
     ·              ╰── `Separator` redefined here
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
     ╰────

  × the name `Briefcase` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·          ────┬────
     ·              ╰── previous definition of `Briefcase` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·          ────┬────
     ·              ╰── `Briefcase` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `MapPin` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                     ───┬──
     ·                        ╰── previous definition of `MapPin` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                     ───┬──
     ·                        ╰── `MapPin` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `Calendar` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                             ────┬───
     ·                                 ╰── previous definition of `Calendar` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                             ────┬───
     ·                                 ╰── `Calendar` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `Edit` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                       ──┬─
     ·                                         ╰── previous definition of `Edit` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                       ──┬─
     ·                                         ╰── `Edit` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `MessageSquare` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                             ──────┬──────
     ·                                                   ╰── previous definition of `MessageSquare` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                             ──────┬──────
     ·                                                   ╰── `MessageSquare` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `UserPlus` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                                            ────┬───
     ·                                                                ╰── previous definition of `UserPlus` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                                            ────┬───
     ·                                                                ╰── `UserPlus` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `User` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:5:1]
   5 │ import Link from 'next/link'
   6 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
   7 │ import { Separator } from "@/components/ui/separator"
   8 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                                                      ──┬─
     ·                                                                        ╰── previous definition of `User` here
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
     ·                                                                      ──┬─
     ·                                                                        ╰── `User` redefined here
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
     ╰────

  × the name `ProfilePage` is defined multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:9:1]
   9 │ 
  10 │ export const revalidate = 3600 // Revalidate the data at most every hour
  11 │ 
  12 │ export default async function ProfilePage({ params }: { params: { username: string } }) {
     ·                               ─────┬─────
     ·                                    ╰── previous definition of `ProfilePage` here
  13 │   const { username } = params
  14 │   const supabase = createLegacyClient()
  15 │ 
  16 │   // Get session
  17 │   const { data: { session } } = await supabase.auth.getSession()
  18 │ 
  19 │   // Get profile by username
  20 │   const { data: profile, error } = await supabase
  21 │     .from("profiles")
  22 │     .select("*")
  23 │     .eq("username", username)
  24 │     .single()
  25 │ 
  26 │   if (error || !profile) {
  27 │     // Profile not found
  28 │     return notFound()
  29 │   }
  30 │ 
  31 │   // Check if viewing own profile
  32 │   const isOwnProfile = session?.user.id === profile.id
  33 │ 
  34 │   // Format date for display
  35 │   const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │     year: "numeric",
  37 │     month: "long",
  38 │   })
  39 │ 
  40 │   // Helper function to get initials
  41 │   const getInitials = (name: string) => {
  42 │     if (!name) return 'U'
  43 │     return name
  44 │       .split(' ')
  45 │       .map(part => part?.[0] || '')
  46 │       .join('')
  47 │       .toUpperCase()
  48 │       .substring(0, 2)
  49 │   }
  50 │ 
  51 │   return (
  52 │     <div className="container py-8">
  53 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │         {/* Profile Sidebar */}
  55 │         <div className="space-y-6">
  56 │           <Card>
  57 │             <CardContent className="pt-6">
  58 │               <div className="flex flex-col items-center">
  59 │                 <Avatar className="h-24 w-24 mb-4">
  60 │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │                   <AvatarFallback>
  62 │                     {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │                   </AvatarFallback>
  64 │                 </Avatar>
  65 │                 <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │                 <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ 
  68 │                 <div className="w-full flex gap-2 mt-4">
  69 │                   {isOwnProfile ? (
  70 │                     <Button className="w-full" asChild>
  71 │                       <a href="/profile/setup">
  72 │                         <Edit className="h-4 w-4 mr-2" />
  73 │                         Edit Profile
  74 │                       </a>
  75 │                     </Button>
  76 │                   ) : (
  77 │                     <>
  78 │                       <Button className="flex-1">
  79 │                         <MessageSquare className="h-4 w-4 mr-2" />
  80 │                         Message
  81 │                       </Button>
  82 │                       <Button variant="outline" className="flex-1">
  83 │                         <UserPlus className="h-4 w-4 mr-2" />
  84 │                         Connect
  85 │                       </Button>
  86 │                     </>
  87 │                   )}
  88 │                 </div>
  89 │               </div>
  90 │             </CardContent>
  91 │           </Card>
  92 │ 
  93 │           <Card>
  94 │             <CardHeader>
  95 │               <CardTitle className="text-lg">Details</CardTitle>
  96 │             </CardHeader>
  97 │             <CardContent className="space-y-4">
  98 │               {profile.company && (
  99 │                 <div className="flex items-center gap-2">
 100 │                   <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │                   <div>
 102 │                     <p className="text-sm font-medium">
 103 │                       {profile.position ? `${profile.position} at ` : "Works at "}
 104 │                       {profile.company}
 105 │                     </p>
 106 │                   </div>
 107 │                 </div>
 108 │               )}
 109 │ 
 110 │               {profile.location && (
 111 │                 <div className="flex items-center gap-2">
 112 │                   <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │                   <p className="text-sm">{profile.location}</p>
 114 │                 </div>
 115 │               )}
 116 │ 
 117 │               <div className="flex items-center gap-2">
 118 │                 <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │                 <p className="text-sm">Joined {joinDate}</p>
 120 │               </div>
 121 │ 
 122 │               <div className="flex items-center gap-2">
 123 │                 <User className="h-4 w-4 text-muted-foreground" />
 124 │                 <p className="text-sm">@{profile.username}</p>
 125 │               </div>
 126 │             </CardContent>
 127 │           </Card>
 128 │         </div>
 129 │ 
 130 │         {/* Main Profile Content */}
 131 │         <div className="lg:col-span-2 space-y-6">
 132 │           {/* Bio Section */}
 133 │           <Card>
 134 │             <CardHeader>
 135 │               <CardTitle className="text-lg">About</CardTitle>
 136 │             </CardHeader>
 137 │             <CardContent>
 138 │               {profile.bio ? (
 139 │                 <p className="whitespace-pre-line">{profile.bio}</p>
 140 │               ) : (
 141 │                 <p className="text-muted-foreground italic">
 142 │                   {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │                 </p>
 144 │               )}
 145 │             </CardContent>
 146 │           </Card>
 147 │ 
 148 │           {/* Activity Section */}
 149 │           <Card>
 150 │             <CardHeader>
 151 │               <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │             </CardHeader>
 153 │             <CardContent>
 154 │               <div className="text-center py-8">
 155 │                 <p className="text-muted-foreground">No recent activity to display</p>
 156 │                 {isOwnProfile && (
 157 │                   <Button variant="link" asChild>
 158 │                     <a href="/feed">Share your first post</a>
 159 │                   </Button>
 160 │                 )}
 161 │               </div>
 162 │             </CardContent>
 163 │           </Card>
 164 │         </div>
 165 │       </div>
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │ import { Separator } from "@/components/ui/separator"
 177 │ import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │ import { supabase } from '@/lib/supabase'
 179 │ import { ProfileEditor } from '@/components/profile-editor'
 180 │ import { PostItem } from '@/components/post-item'
 181 │ 
 182 │ export default function ProfilePage() {
     ·                         ─────┬─────
     ·                              ╰── `ProfilePage` redefined here
 183 │   const params = useParams()
 184 │   const router = useRouter()
 185 │   const username = params.username as string
     ╰────

  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:9:1]
   9 │     
  10 │     export const revalidate = 3600 // Revalidate the data at most every hour
  11 │     
  12 │ ╭─▶ export default async function ProfilePage({ params }: { params: { username: string } }) {
  13 │ │     const { username } = params
  14 │ │     const supabase = createLegacyClient()
  15 │ │   
  16 │ │     // Get session
  17 │ │     const { data: { session } } = await supabase.auth.getSession()
  18 │ │   
  19 │ │     // Get profile by username
  20 │ │     const { data: profile, error } = await supabase
  21 │ │       .from("profiles")
  22 │ │       .select("*")
  23 │ │       .eq("username", username)
  24 │ │       .single()
  25 │ │   
  26 │ │     if (error || !profile) {
  27 │ │       // Profile not found
  28 │ │       return notFound()
  29 │ │     }
  30 │ │   
  31 │ │     // Check if viewing own profile
  32 │ │     const isOwnProfile = session?.user.id === profile.id
  33 │ │   
  34 │ │     // Format date for display
  35 │ │     const joinDate = new Date(profile.created_at).toLocaleDateString("en-US", {
  36 │ │       year: "numeric",
  37 │ │       month: "long",
  38 │ │     })
  39 │ │   
  40 │ │     // Helper function to get initials
  41 │ │     const getInitials = (name: string) => {
  42 │ │       if (!name) return 'U'
  43 │ │       return name
  44 │ │         .split(' ')
  45 │ │         .map(part => part?.[0] || '')
  46 │ │         .join('')
  47 │ │         .toUpperCase()
  48 │ │         .substring(0, 2)
  49 │ │     }
  50 │ │   
  51 │ │     return (
  52 │ │       <div className="container py-8">
  53 │ │         <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
  54 │ │           {/* Profile Sidebar */}
  55 │ │           <div className="space-y-6">
  56 │ │             <Card>
  57 │ │               <CardContent className="pt-6">
  58 │ │                 <div className="flex flex-col items-center">
  59 │ │                   <Avatar className="h-24 w-24 mb-4">
  60 │ │                     <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.full_name} />
  61 │ │                     <AvatarFallback>
  62 │ │                       {profile.full_name?.split(" ").map((n: string) => n[0]).join("") || username[0].toUpperCase()}
  63 │ │                     </AvatarFallback>
  64 │ │                   </Avatar>
  65 │ │                   <h2 className="text-2xl font-bold">{profile.full_name}</h2>
  66 │ │                   <p className="text-muted-foreground text-center">{profile.headline}</p>
  67 │ │   
  68 │ │                   <div className="w-full flex gap-2 mt-4">
  69 │ │                     {isOwnProfile ? (
  70 │ │                       <Button className="w-full" asChild>
  71 │ │                         <a href="/profile/setup">
  72 │ │                           <Edit className="h-4 w-4 mr-2" />
  73 │ │                           Edit Profile
  74 │ │                         </a>
  75 │ │                       </Button>
  76 │ │                     ) : (
  77 │ │                       <>
  78 │ │                         <Button className="flex-1">
  79 │ │                           <MessageSquare className="h-4 w-4 mr-2" />
  80 │ │                           Message
  81 │ │                         </Button>
  82 │ │                         <Button variant="outline" className="flex-1">
  83 │ │                           <UserPlus className="h-4 w-4 mr-2" />
  84 │ │                           Connect
  85 │ │                         </Button>
  86 │ │                       </>
  87 │ │                     )}
  88 │ │                   </div>
  89 │ │                 </div>
  90 │ │               </CardContent>
  91 │ │             </Card>
  92 │ │   
  93 │ │             <Card>
  94 │ │               <CardHeader>
  95 │ │                 <CardTitle className="text-lg">Details</CardTitle>
  96 │ │               </CardHeader>
  97 │ │               <CardContent className="space-y-4">
  98 │ │                 {profile.company && (
  99 │ │                   <div className="flex items-center gap-2">
 100 │ │                     <Briefcase className="h-4 w-4 text-muted-foreground" />
 101 │ │                     <div>
 102 │ │                       <p className="text-sm font-medium">
 103 │ │                         {profile.position ? `${profile.position} at ` : "Works at "}
 104 │ │                         {profile.company}
 105 │ │                       </p>
 106 │ │                     </div>
 107 │ │                   </div>
 108 │ │                 )}
 109 │ │   
 110 │ │                 {profile.location && (
 111 │ │                   <div className="flex items-center gap-2">
 112 │ │                     <MapPin className="h-4 w-4 text-muted-foreground" />
 113 │ │                     <p className="text-sm">{profile.location}</p>
 114 │ │                   </div>
 115 │ │                 )}
 116 │ │   
 117 │ │                 <div className="flex items-center gap-2">
 118 │ │                   <Calendar className="h-4 w-4 text-muted-foreground" />
 119 │ │                   <p className="text-sm">Joined {joinDate}</p>
 120 │ │                 </div>
 121 │ │   
 122 │ │                 <div className="flex items-center gap-2">
 123 │ │                   <User className="h-4 w-4 text-muted-foreground" />
 124 │ │                   <p className="text-sm">@{profile.username}</p>
 125 │ │                 </div>
 126 │ │               </CardContent>
 127 │ │             </Card>
 128 │ │           </div>
 129 │ │   
 130 │ │           {/* Main Profile Content */}
 131 │ │           <div className="lg:col-span-2 space-y-6">
 132 │ │             {/* Bio Section */}
 133 │ │             <Card>
 134 │ │               <CardHeader>
 135 │ │                 <CardTitle className="text-lg">About</CardTitle>
 136 │ │               </CardHeader>
 137 │ │               <CardContent>
 138 │ │                 {profile.bio ? (
 139 │ │                   <p className="whitespace-pre-line">{profile.bio}</p>
 140 │ │                 ) : (
 141 │ │                   <p className="text-muted-foreground italic">
 142 │ │                     {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 143 │ │                   </p>
 144 │ │                 )}
 145 │ │               </CardContent>
 146 │ │             </Card>
 147 │ │   
 148 │ │             {/* Activity Section */}
 149 │ │             <Card>
 150 │ │               <CardHeader>
 151 │ │                 <CardTitle className="text-lg">Recent Activity</CardTitle>
 152 │ │               </CardHeader>
 153 │ │               <CardContent>
 154 │ │                 <div className="text-center py-8">
 155 │ │                   <p className="text-muted-foreground">No recent activity to display</p>
 156 │ │                   {isOwnProfile && (
 157 │ │                     <Button variant="link" asChild>
 158 │ │                       <a href="/feed">Share your first post</a>
 159 │ │                     </Button>
 160 │ │                   )}
 161 │ │                 </div>
 162 │ │               </CardContent>
 163 │ │             </Card>
 164 │ │           </div>
 165 │ │         </div>
 166 │ │       </div>
 167 │ │     )
 168 │ ├─▶ }
     · ╰──── previous exported here
 169 │     "use client"
 170 │     
 171 │     import { useState, useEffect } from 'react'
 172 │     import { useParams, useRouter } from 'next/navigation'
 173 │     import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │     import { Button } from '@/components/ui/button'
 175 │     import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
 176 │     import { Separator } from "@/components/ui/separator"
 177 │     import { Briefcase, MapPin, Calendar, Edit, MessageSquare, UserPlus, User } from "lucide-react"
 178 │     import { supabase } from '@/lib/supabase'
 179 │     import { ProfileEditor } from '@/components/profile-editor'
 180 │     import { PostItem } from '@/components/post-item'
 181 │     
 182 │ ╭─▶ export default function ProfilePage() {
 183 │ │     const params = useParams()
 184 │ │     const router = useRouter()
 185 │ │     const username = params.username as string
 186 │ │     
 187 │ │     const [profile, setProfile] = useState<any>(null)
 188 │ │     const [currentUser, setCurrentUser] = useState<any>(null)
 189 │ │     const [isOwnProfile, setIsOwnProfile] = useState(false)
 190 │ │     const [loading, setLoading] = useState(true)
 191 │ │     const [editing, setEditing] = useState(false)
 192 │ │     const [userPosts, setUserPosts] = useState<any[]>([])
 193 │ │     const [activityLoading, setActivityLoading] = useState(true)
 194 │ │   
 195 │ │     // Format date for display
 196 │ │     const formatDate = (dateString: string) => {
 197 │ │       return new Date(dateString).toLocaleDateString("en-US", {
 198 │ │         year: "numeric",
 199 │ │         month: "long",
 200 │ │       })
 201 │ │     }
 202 │ │   
 203 │ │     useEffect(() => {
 204 │ │       const fetchProfile = async () => {
 205 │ │         setLoading(true)
 206 │ │         try {
 207 │ │           // Get current user
 208 │ │           const { data: { user } } = await supabase.auth.getUser()
 209 │ │           setCurrentUser(user)
 210 │ │   
 211 │ │           // Get profile by username
 212 │ │           const { data: profileData, error } = await supabase
 213 │ │             .from("profiles")
 214 │ │             .select("*")
 215 │ │             .eq("username", username)
 216 │ │             .single()
 217 │ │   
 218 │ │           if (error || !profileData) {
 219 │ │             console.error('Profile error:', error)
 220 │ │             router.push('/404')
 221 │ │             return
 222 │ │           }
 223 │ │   
 224 │ │           setProfile(profileData)
 225 │ │           setIsOwnProfile(user?.id === profileData.id)
 226 │ │           
 227 │ │           // Fetch user's posts for activity
 228 │ │           await fetchUserActivity(profileData.id)
 229 │ │         } catch (error) {
 230 │ │           console.error('Error fetching profile:', error)
 231 │ │         } finally {
 232 │ │           setLoading(false)
 233 │ │         }
 234 │ │       }
 235 │ │   
 236 │ │       if (username) {
 237 │ │         fetchProfile()
 238 │ │       }
 239 │ │     }, [username, router])
 240 │ │   
 241 │ │     const fetchUserActivity = async (userId: string) => {
 242 │ │       setActivityLoading(true)
 243 │ │       try {
 244 │ │         // Fetch user's posts
 245 │ │         const { data: posts, error } = await supabase
 246 │ │           .from('posts')
 247 │ │           .select('*, profiles(*)')
 248 │ │           .eq('user_id', userId)
 249 │ │           .order('created_at', { ascending: false })
 250 │ │           .limit(5)
 251 │ │   
 252 │ │         if (error) {
 253 │ │           console.error('Error fetching user posts:', error)
 254 │ │           return
 255 │ │         }
 256 │ │   
 257 │ │         setUserPosts(posts || [])
 258 │ │       } catch (error) {
 259 │ │         console.error('Error in fetchUserActivity:', error)
 260 │ │       } finally {
 261 │ │         setActivityLoading(false)
 262 │ │       }
 263 │ │     }
 264 │ │   
 265 │ │     const handleProfileUpdate = async () => {
 266 │ │       setEditing(false)
 267 │ │       // Refetch profile data
 268 │ │       const { data: updatedProfile } = await supabase
 269 │ │         .from("profiles")
 270 │ │         .select("*")
 271 │ │         .eq("username", username)
 272 │ │         .single()
 273 │ │       
 274 │ │       if (updatedProfile) {
 275 │ │         setProfile(updatedProfile)
 276 │ │       }
 277 │ │     }
 278 │ │   
 279 │ │     if (loading) {
 280 │ │       return (
 281 │ │         <div className="container py-8">
 282 │ │           <div className="max-w-4xl mx-auto">
 283 │ │             <div className="animate-pulse">
 284 │ │               <div className="h-32 bg-gray-200 rounded-lg mb-4"></div>
 285 │ │               <div className="h-24 bg-gray-200 rounded-lg mb-4"></div>
 286 │ │               <div className="h-48 bg-gray-200 rounded-lg"></div>
 287 │ │             </div>
 288 │ │           </div>
 289 │ │         </div>
 290 │ │       )
 291 │ │     }
 292 │ │   
 293 │ │     if (!profile) {
 294 │ │       return (
 295 │ │         <div className="container py-8">
 296 │ │           <div className="max-w-4xl mx-auto text-center">
 297 │ │             <h1 className="text-2xl font-bold mb-4">Profile not found</h1>
 298 │ │             <p className="mb-6">The profile you're looking for doesn't exist or has been removed.</p>
 299 │ │             <Button onClick={() => router.push('/feed')}>Return to Feed</Button>
 300 │ │           </div>
 301 │ │         </div>
 302 │ │       )
 303 │ │     }
 304 │ │   
 305 │ │     return (
 306 │ │       <div className="container py-8">
 307 │ │         <div className="max-w-4xl mx-auto">
 308 │ │           {/* Profile Header */}
 309 │ │           <Card className="mb-6">
 310 │ │             <CardContent className="p-6">
 311 │ │               <div className="flex flex-col md:flex-row items-center md:items-start gap-6">
 312 │ │                 <Avatar className="h-24 w-24">
 313 │ │                   <AvatarImage src={profile.avatar_url || "/placeholder-user.jpg"} alt={profile.name} />
 314 │ │                   <AvatarFallback>{profile.name?.charAt(0) || "U"}</AvatarFallback>
 315 │ │                 </Avatar>
 316 │ │                 
 317 │ │                 <div className="flex-1 text-center md:text-left">
 318 │ │                   <h1 className="text-2xl font-bold">{profile.name || "Anonymous User"}</h1>
 319 │ │                   {profile.username && (
 320 │ │                     <p className="text-muted-foreground mb-2">@{profile.username}</p>
 321 │ │                   )}
 322 │ │                   
 323 │ │                   <div className="flex flex-wrap justify-center md:justify-start gap-x-4 gap-y-2 mt-2">
 324 │ │                     {profile.position && (
 325 │ │                       <div className="flex items-center text-sm text-muted-foreground">
 326 │ │                         <Briefcase className="h-4 w-4 mr-1" />
 327 │ │                         <span>{profile.position}</span>
 328 │ │                       </div>
 329 │ │                     )}
 330 │ │                     
 331 │ │                     {profile.company && (
 332 │ │                       <div className="flex items-center text-sm text-muted-foreground">
 333 │ │                         <Briefcase className="h-4 w-4 mr-1" />
 334 │ │                         <span>{profile.company}</span>
 335 │ │                       </div>
 336 │ │                     )}
 337 │ │                     
 338 │ │                     {profile.location && (
 339 │ │                       <div className="flex items-center text-sm text-muted-foreground">
 340 │ │                         <MapPin className="h-4 w-4 mr-1" />
 341 │ │                         <span>{profile.location}</span>
 342 │ │                       </div>
 343 │ │                     )}
 344 │ │                     
 345 │ │                     <div className="flex items-center text-sm text-muted-foreground">
 346 │ │                       <Calendar className="h-4 w-4 mr-1" />
 347 │ │                       <span>Joined {formatDate(profile.created_at)}</span>
 348 │ │                     </div>
 349 │ │                   </div>
 350 │ │                 </div>
 351 │ │                 
 352 │ │                 <div className="flex flex-col gap-2">
 353 │ │                   {isOwnProfile ? (
 354 │ │                     <Button 
 355 │ │                       variant="outline" 
 356 │ │                       size="sm" 
 357 │ │                       className="flex items-center gap-1"
 358 │ │                       onClick={() => setEditing(!editing)}
 359 │ │                     >
 360 │ │                       <Edit className="h-4 w-4" />
 361 │ │                       <span>{editing ? "Cancel" : "Edit Profile"}</span>
 362 │ │                     </Button>
 363 │ │                   ) : (
 364 │ │                     <>
 365 │ │                       <Button variant="default" size="sm" className="flex items-center gap-1">
 366 │ │                         <UserPlus className="h-4 w-4" />
 367 │ │                         <span>Connect</span>
 368 │ │                       </Button>
 369 │ │                       <Button variant="outline" size="sm" className="flex items-center gap-1">
 370 │ │                         <MessageSquare className="h-4 w-4" />
 371 │ │                         <span>Message</span>
 372 │ │                       </Button>
 373 │ │                     </>
 374 │ │                   )}
 375 │ │                 </div>
 376 │ │               </div>
 377 │ │             </CardContent>
 378 │ │           </Card>
 379 │ │   
 380 │ │           {/* Profile Content */}
 381 │ │           <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
 382 │ │             {/* Bio/Edit Section */}
 383 │ │             <div className="lg:col-span-3">
 384 │ │               <Card>
 385 │ │                 <CardHeader>
 386 │ │                   <CardTitle className="text-lg">
 387 │ │                     {editing ? "Edit Profile" : "About"}
 388 │ │                   </CardTitle>
 389 │ │                 </CardHeader>
 390 │ │                 <CardContent>
 391 │ │                   {editing ? (
 392 │ │                     <ProfileEditor profile={profile} onUpdate={handleProfileUpdate} />
 393 │ │                   ) : (
 394 │ │                     <>
 395 │ │                       {profile.bio ? (
 396 │ │                         <p className="whitespace-pre-line">{profile.bio}</p>
 397 │ │                       ) : (
 398 │ │                         <p className="text-muted-foreground italic">
 399 │ │                           {isOwnProfile ? "Add a bio to tell others about yourself." : "No bio available."}
 400 │ │                         </p>
 401 │ │                       )}
 402 │ │                     </>
 403 │ │                   )}
 404 │ │                 </CardContent>
 405 │ │               </Card>
 406 │ │             </div>
 407 │ │   
 408 │ │             {/* Activity Section */}
 409 │ │             <div className="lg:col-span-3">
 410 │ │               <Card>
 411 │ │                 <CardHeader>
 412 │ │                   <CardTitle className="text-lg">Recent Activity</CardTitle>
 413 │ │                 </CardHeader>
 414 │ │                 <CardContent>
 415 │ │                   {activityLoading ? (
 416 │ │                     <div className="space-y-4">
 417 │ │                       {[1, 2, 3].map((n) => (
 418 │ │                         <div key={n} className="animate-pulse">
 419 │ │                           <div className="h-24 bg-gray-200 rounded-lg"></div>
 420 │ │                         </div>
 421 │ │                       ))}
 422 │ │                     </div>
 423 │ │                   ) : userPosts.length > 0 ? (
 424 │ │                     <div className="space-y-4">
 425 │ │                       {userPosts.map((post) => (
 426 │ │                         <PostItem 
 427 │ │                           key={post.id} 
 428 │ │                           post={post} 
 429 │ │                           currentUserId={currentUser?.id}
 430 │ │                           onUpdate={() => fetchUserActivity(profile.id)}
 431 │ │                         />
 432 │ │                       ))}
 433 │ │                     </div>
 434 │ │                   ) : (
 435 │ │                     <div className="text-center py-8">
 436 │ │                       <p className="text-muted-foreground">No recent activity to display</p>
 437 │ │                       {isOwnProfile && (
 438 │ │                         <Button variant="link" onClick={() => router.push('/feed')}>
 439 │ │                           Share your first post
 440 │ │                         </Button>
 441 │ │                       )}
 442 │ │                     </div>
 443 │ │                   )}
 444 │ │                 </CardContent>
 445 │ │               </Card>
 446 │ │             </div>
 447 │ │           </div>
 448 │ │         </div>
 449 │ │       </div>
 450 │ │     )
 451 │ ├─▶ }
     · ╰──── exported more than once
     ╰────

Error: 
  ☞ Exported identifiers must be unique

  × The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:166:1]
 166 │     </div>
 167 │   )
 168 │ }
 169 │ "use client"
     · ────────────
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
     ╰────

  × You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  │ Learn more: https://nextjs.org/docs/getting-started/react-essentials
  │ 
  │ 
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:168:1]
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
     ·          ────────
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
     ╰────

  × You're importing a component that needs useEffect. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  │ Learn more: https://nextjs.org/docs/getting-started/react-essentials
  │ 
  │ 
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:168:1]
 168 │ }
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
     ·                    ─────────
 172 │ import { useParams, useRouter } from 'next/navigation'
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
     ╰────

  × You're importing a component that needs useParams. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  │ Learn more: https://nextjs.org/docs/getting-started/react-essentials
  │ 
  │ 
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:169:1]
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
     ·          ─────────
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ╰────

  × You're importing a component that needs useRouter. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  │ Learn more: https://nextjs.org/docs/getting-started/react-essentials
  │ 
  │ 
     ╭─[/home/runner/workspace/app/profile/[username]/page.tsx:169:1]
 169 │ "use client"
 170 │ 
 171 │ import { useState, useEffect } from 'react'
 172 │ import { useParams, useRouter } from 'next/navigation'
     ·                     ─────────
 173 │ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 174 │ import { Button } from '@/components/ui/button'
 175 │ import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
     ╰────
This error occurred during the build process and can only be dismissed by fixing the error.

