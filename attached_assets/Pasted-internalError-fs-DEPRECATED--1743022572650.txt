internalError/fs  DEPRECATED  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ The argument --apply is deprecated, it will be removed in the next major release. Use --write instead.
  

./components/ui/use-toast.ts:96:9 lint/complexity/noForEach ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Prefer for...of instead of forEach.
  
     94 │         addToRemoveQueue(toastId);
     95 │       } else {
   > 96 │         state.toasts.forEach((toast) => {
        │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   > 97 │           addToRemoveQueue(toast.id);
   > 98 │         });
        │         ^^
     99 │       }
    100 │ 
  
  ℹ forEach may lead to performance issues when working with large arrays. When combined with functions like filter or map, this causes multiple iterations over the same type.
  

./components/ui/use-toast.ts:133:3 lint/complexity/noForEach ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Prefer for...of instead of forEach.
  
    131 │ function dispatch(action: Action) {
    132 │   memoryState = reducer(memoryState, action);
  > 133 │   listeners.forEach((listener) => {
        │   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 134 │     listener(memoryState);
  > 135 │   });
        │   ^^
    136 │ }
    137 │ 
  
  ℹ forEach may lead to performance issues when working with large arrays. When combined with functions like filter or map, this causes multiple iterations over the same type.
  

./components/ui/use-toast.ts:172:9 lint/correctness/useExhaustiveDependencies ━━━━━━━━━━━━━━━━━━━━━━

  ✖ This hook specifies more dependencies than necessary: state
  
    170 │   const [state, setState] = React.useState<State>(memoryState);
    171 │ 
  > 172 │   React.useEffect(() => {
        │         ^^^^^^^^^
    173 │     listeners.push(setState);
    174 │     return () => {
  
  ℹ This dependency can be removed from the list.
  
    178 │       }
    179 │     };
  > 180 │   }, [state]);
        │       ^^^^^
    181 │ 
    182 │   return {
  

./app/compliance/page.tsx:202:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Expected corresponding JSX closing tag for 'button'.
  
    200 │           <Card key={area.id} className={`border-l-4 ${getStatusClass(area.status)}`}>
    201 │             <CardHeader className="p-6 pb-0">
  > 202 │               <button
        │               ^^^^^^^
  > 203 │                 type="button"
  > 204 │                 className="flex justify-between items-center cursor-pointer w-full text-left"
  > 205 │                 onClick={() => toggleSection(index)}
  > 206 │               >
        │               ^
    207 │                 <div className="flex items-center gap-3">
    208 │                   {getStatusIcon(area.status)}
  
  ℹ Opening tag
  
    200 │           <Card key={area.id} className={`border-l-4 ${getStatusClass(area.status)}`}>
    201 │             <CardHeader className="p-6 pb-0">
  > 202 │               <button
        │               ^^^^^^^
  > 203 │                 type="button"
  > 204 │                 className="flex justify-between items-center cursor-pointer w-full text-left"
  > 205 │                 onClick={() => toggleSection(index)}
  > 206 │               >
        │               ^
    207 │                 <div className="flex items-center gap-3">
    208 │                   {getStatusIcon(area.status)}
  
  ℹ closing tag
  
    231 │                   )}
    232 │                 </div>
  > 233 │               </div>
        │               ^^^^^^
    234 │             </CardHeader>
    235 │ 
  

./app/compliance/page.tsx:202:15 parse ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Expected corresponding JSX closing tag for 'button'.
  
    200 │           <Card key={area.id} className={`border-l-4 ${getStatusClass(area.status)}`}>
    201 │             <CardHeader className="p-6 pb-0">
  > 202 │               <button
        │               ^^^^^^^
  > 203 │                 type="button"
  > 204 │                 className="flex justify-between items-center cursor-pointer w-full text-left"
  > 205 │                 onClick={() => toggleSection(index)}
  > 206 │               >
        │               ^
    207 │                 <div className="flex items-center gap-3">
    208 │                   {getStatusIcon(area.status)}
  
  ℹ Opening tag
  
    200 │           <Card key={area.id} className={`border-l-4 ${getStatusClass(area.status)}`}>
    201 │             <CardHeader className="p-6 pb-0">
  > 202 │               <button
        │               ^^^^^^^
  > 203 │                 type="button"
  > 204 │                 className="flex justify-between items-center cursor-pointer w-full text-left"
  > 205 │                 onClick={() => toggleSection(index)}
  > 206 │               >
        │               ^
    207 │                 <div className="flex items-center gap-3">
    208 │                   {getStatusIcon(area.status)}
  
  ℹ closing tag
  
    231 │                   )}
    232 │                 </div>
  > 233 │               </div>
        │               ^^^^^^
    234 │             </CardHeader>
    235 │ 
  

./app/compliance/page.tsx format ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Code formatting aborted due to parsing errors. To format code with errors, enable the 'formatter.formatWithErrors' option.
  

./app/components/footer-cta.tsx:9:36 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
     8 │ export default function FooterCTA() {
   > 9 │   const [user, setUser] = useState<any>(null);
       │                                    ^^^
    10 │   const [loading, setLoading] = useState(true);
    11 │ 
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/components/profile-photo-modal.tsx:152:21 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    150 │       // Refresh the page to show the updated avatar
    151 │       router.refresh();
  > 152 │     } catch (error: any) {
        │                     ^^^
    153 │       toast({
    154 │         title: "Error updating avatar",
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/components/profile-photo-modal.tsx:191:21 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    189 │       // Refresh the page
    190 │       router.refresh();
  > 191 │     } catch (error: any) {
        │                     ^^^
    192 │       toast({
    193 │         title: "Error removing avatar",
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/components/profile-photo-modal.tsx:213:11 lint/a11y/useButtonType ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Provide an explicit type prop for the button element.
  
    211 │         <div className="flex items-center justify-between p-4 border-b">
    212 │           <h2 className="text-xl font-bold">Profile photo</h2>
  > 213 │           <button onClick={onClose} className="text-muted-foreground hover:text-foreground">
        │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    214 │             <X className="h-5 w-5" />
    215 │           </button>
  
  ℹ The default type of a button is submit, which causes the submission of a form when placed inside a `form` element. This is likely not the behaviour that you want inside a React application.
  
  ℹ Allowed button types are: submit, button or reset
  

./app/feed/page.tsx:75:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    74 │ export default function FeedPage() {
  > 75 │   const [posts, setPosts] = useState<any[]>([]);
       │                                      ^^^
    76 │   const [loading, setLoading] = useState(true);
    77 │   const { user, profile: userProfile, isLoading: authLoading, session } = useAuth();
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/feed/page.tsx:80:3 lint/correctness/useExhaustiveDependencies ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ This hook specifies more dependencies than necessary: router
  
    78 │   const router = useRouter();
    79 │ 
  > 80 │   useEffect(() => {
       │   ^^^^^^^^^
    81 │     async function fetchPosts() {
    82 │       try {
  
  ℹ This dependency can be removed from the list.
  
    154 │       postsSubscription.unsubscribe();
    155 │     };
  > 156 │   }, [router]);
        │       ^^^^^^
    157 │ 
    158 │   return (
  

./app/feed/page.tsx:222:28 lint/suspicious/noArrayIndexKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Avoid using the index of an array as key property in an element.
  
    220 │               .fill(0)
    221 │               .map((_, index) => (
  > 222 │                 <Card key={index} className="mb-4">
        │                            ^^^^^
    223 │                   <CardContent className="pt-6">
    224 │                     <div className="flex items-start gap-3 mb-4">
  
  ℹ This is the source of the key value.
  
    219 │             Array(3)
    220 │               .fill(0)
  > 221 │               .map((_, index) => (
        │                        ^^^^^
    222 │                 <Card key={index} className="mb-4">
    223 │                   <CardContent className="pt-6">
  
  ℹ The order of the items may change, and this also affects performances and component state.
  
  ℹ Check the React documentation. 
  

./app/feed/page.tsx:363:31 lint/suspicious/noArrayIndexKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Avoid using the index of an array as key property in an element.
  
    361 │                 <div className="space-y-4">
    362 │                   {[1, 2, 3].map((_, index) => (
  > 363 │                     <div key={index} className="flex items-center justify-between">
        │                               ^^^^^
    364 │                       <div className="flex items-center gap-2">
    365 │                         <Skeleton className="h-8 w-8 rounded-full" />
  
  ℹ This is the source of the key value.
  
    360 │               {authLoading ? (
    361 │                 <div className="space-y-4">
  > 362 │                   {[1, 2, 3].map((_, index) => (
        │                                      ^^^^^
    363 │                     <div key={index} className="flex items-center justify-between">
    364 │                       <div className="flex items-center gap-2">
  
  ℹ The order of the items may change, and this also affects performances and component state.
  
  ℹ Check the React documentation. 
  

./app/events/page.tsx:56:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    55 │   // Filtered events based on search and filters
  > 56 │   const getFilteredEvents = (events: any[]) => {
       │                                      ^^^
    57 │     return events.filter((event) => {
    58 │       // Search filter
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/events/page.tsx:314:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    313 │   // Function to render event cards
  > 314 │   const renderEventCard = (event: any) => (
        │                                   ^^^
    315 │     <Card className="overflow-hidden" key={event.id}>
    316 │       <div className="h-48 overflow-hidden relative">
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/events/page.tsx:371:39 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Unexpected any. Specify a different type.
  
    370 │   // Function to render event list items
  > 371 │   const renderEventListItem = (event: any) => (
        │                                       ^^^
    372 │     <Card className="mb-3" key={event.id}>
    373 │       <CardContent className="p-4 flex gap-4">
  
  ℹ any disables many type checking rules. Its use should be avoided.
  

./app/events/page.tsx:549:58 lint/suspicious/noArrayIndexKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Avoid using the index of an array as key property in an element.
  
    547 │                 .fill(0)
    548 │                 .map((_, i) => (
  > 549 │                   <Card className="overflow-hidden" key={i}>
        │                                                          ^
    550 │                     <div className="h-48 bg-muted animate-pulse" />
    551 │                     <CardHeader className="p-4">
  
  ℹ This is the source of the key value.
  
    546 │               {Array(6)
    547 │                 .fill(0)
  > 548 │                 .map((_, i) => (
        │                          ^
    549 │                   <Card className="overflow-hidden" key={i}>
    550 │                     <div className="h-48 bg-muted animate-pulse" />
  
  ℹ The order of the items may change, and this also affects performances and component state.
  
  ℹ Check the React documentation. 
  

./app/events/page.tsx:594:58 lint/suspicious/noArrayIndexKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Avoid using the index of an array as key property in an element.
  
    592 │                 .fill(0)
    593 │                 .map((_, i) => (
  > 594 │                   <Card className="overflow-hidden" key={i}>
        │                                                          ^
    595 │                     <div className="h-48 bg-muted animate-pulse" />
    596 │                     <CardHeader className="p-4">
  
  ℹ This is the source of the key value.
  
    591 │               {Array(3)
    592 │                 .fill(0)
  > 593 │                 .map((_, i) => (
        │                          ^
    594 │                   <Card className="overflow-hidden" key={i}>
    595 │                     <div className="h-48 bg-muted animate-pulse" />
  
  ℹ The order of the items may change, and this also affects performances and component state.
  
  ℹ Check the React documentation. 
  

./app/events/page.tsx:668:30 lint/suspicious/noArrayIndexKey ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Avoid using the index of an array as key property in an element.
  
    666 │                     return (
    667 │                       <div
  > 668 │                         key={i}
        │                              ^
    669 │                         className={`min-h-24 border rounded-md p-1 ${day < 1 || day > 30 ? "bg-muted/30" : ""}`}
    670 │                       >
  
  ℹ This is the source of the key value.
  
    663 │                   {/* Calendar grid - example for a month */}
  > 664 │                   {Array.from({ length: 35 }).map((_, i) => {
        │                                                       ^
    665 │                     const day = i - 2; // Adjust to start from correct day (example)
    666 │                     return (
  
  ℹ The order of the items may change, and this also affects performances and component state.
  
  ℹ Check the React documentation. 
  

Skipped 13 suggested fixes.
If you wish to apply the suggested (unsafe) fixes, use the command biome check --fix --unsafe

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 59.
Checked 91 files in 223ms. Fixed 1 file.
Found 55 errors.
Found 24 warnings.
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Some errors were emitted while applying fixes.
  

