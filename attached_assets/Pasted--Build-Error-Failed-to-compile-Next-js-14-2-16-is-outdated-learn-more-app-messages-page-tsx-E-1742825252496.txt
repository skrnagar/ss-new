
Build Error
Failed to compile

Next.js (14.2.16) is outdated (learn more)
./app/messages/page.tsx
Error: 
  × the name `useState` is defined multiple times
    ╭─[/home/runner/workspace/app/messages/page.tsx:1:1]
  1 │ "use client";
  2 │ 
  3 │ import { useState } from "react";
    ·          ────┬───
    ·              ╰── previous definition of `useState` here
  4 │ import { useAuth } from "@/contexts/auth-context";
  5 │ import { ChatList } from "@/components/chat/chat-list";
  6 │ import { ChatWindow } from "@/components/chat/chat-window";
  7 │ 
  8 │ export default function MessagesPage() {
  9 │   const { user } = useAuth();
 10 │   const [selectedChat, setSelectedChat] = useState<string | null>(null);
 11 │ 
 12 │   if (!user) {
 13 │     return (
 14 │       <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 15 │         <p>Please sign in to access messages</p>
 16 │       </div>
 17 │     );
 18 │   }
 19 │ 
 20 │   return (
 21 │     <div className="grid grid-cols-1 md:grid-cols-[300px_1fr]">
 22 │       <div className="border-r">
 23 │         <ChatList onSelectChat={setSelectedChat} />
 24 │       </div>
 25 │       <div>
 26 │         {selectedChat ? (
 27 │           <ChatWindow conversationId={selectedChat} />
 28 │         ) : (
 29 │           <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 30 │             <p className="text-muted-foreground">Select a conversation to start chatting</p>
 31 │           </div>
 32 │         )}
 33 │       </div>
 34 │     </div>
 35 │   );
 36 │ }
 37 │ "use client";
 38 │ 
 39 │ import { Button } from "@/components/ui/button";
 40 │ import { Input } from "@/components/ui/input";
 41 │ import { MessageCircle, Search, Plus } from "lucide-react";
 42 │ import { useEffect, useState } from "react";
    ·                     ────┬───
    ·                         ╰── `useState` redefined here
 43 │ import { useAuth } from "@/contexts/auth-context";
 44 │ 
 45 │ export default function MessagesPage() {
    ╰────

  × the name `useAuth` is defined multiple times
    ╭─[/home/runner/workspace/app/messages/page.tsx:1:1]
  1 │ "use client";
  2 │ 
  3 │ import { useState } from "react";
  4 │ import { useAuth } from "@/contexts/auth-context";
    ·          ───┬───
    ·             ╰── previous definition of `useAuth` here
  5 │ import { ChatList } from "@/components/chat/chat-list";
  6 │ import { ChatWindow } from "@/components/chat/chat-window";
  7 │ 
  8 │ export default function MessagesPage() {
  9 │   const { user } = useAuth();
 10 │   const [selectedChat, setSelectedChat] = useState<string | null>(null);
 11 │ 
 12 │   if (!user) {
 13 │     return (
 14 │       <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 15 │         <p>Please sign in to access messages</p>
 16 │       </div>
 17 │     );
 18 │   }
 19 │ 
 20 │   return (
 21 │     <div className="grid grid-cols-1 md:grid-cols-[300px_1fr]">
 22 │       <div className="border-r">
 23 │         <ChatList onSelectChat={setSelectedChat} />
 24 │       </div>
 25 │       <div>
 26 │         {selectedChat ? (
 27 │           <ChatWindow conversationId={selectedChat} />
 28 │         ) : (
 29 │           <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 30 │             <p className="text-muted-foreground">Select a conversation to start chatting</p>
 31 │           </div>
 32 │         )}
 33 │       </div>
 34 │     </div>
 35 │   );
 36 │ }
 37 │ "use client";
 38 │ 
 39 │ import { Button } from "@/components/ui/button";
 40 │ import { Input } from "@/components/ui/input";
 41 │ import { MessageCircle, Search, Plus } from "lucide-react";
 42 │ import { useEffect, useState } from "react";
 43 │ import { useAuth } from "@/contexts/auth-context";
    ·          ───┬───
    ·             ╰── `useAuth` redefined here
 44 │ 
 45 │ export default function MessagesPage() {
 46 │   const { user } = useAuth();
    ╰────

  × the name `MessagesPage` is defined multiple times
    ╭─[/home/runner/workspace/app/messages/page.tsx:5:1]
  5 │ import { ChatList } from "@/components/chat/chat-list";
  6 │ import { ChatWindow } from "@/components/chat/chat-window";
  7 │ 
  8 │ export default function MessagesPage() {
    ·                         ──────┬─────
    ·                               ╰── previous definition of `MessagesPage` here
  9 │   const { user } = useAuth();
 10 │   const [selectedChat, setSelectedChat] = useState<string | null>(null);
 11 │ 
 12 │   if (!user) {
 13 │     return (
 14 │       <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 15 │         <p>Please sign in to access messages</p>
 16 │       </div>
 17 │     );
 18 │   }
 19 │ 
 20 │   return (
 21 │     <div className="grid grid-cols-1 md:grid-cols-[300px_1fr]">
 22 │       <div className="border-r">
 23 │         <ChatList onSelectChat={setSelectedChat} />
 24 │       </div>
 25 │       <div>
 26 │         {selectedChat ? (
 27 │           <ChatWindow conversationId={selectedChat} />
 28 │         ) : (
 29 │           <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
 30 │             <p className="text-muted-foreground">Select a conversation to start chatting</p>
 31 │           </div>
 32 │         )}
 33 │       </div>
 34 │     </div>
 35 │   );
 36 │ }
 37 │ "use client";
 38 │ 
 39 │ import { Button } from "@/components/ui/button";
 40 │ import { Input } from "@/components/ui/input";
 41 │ import { MessageCircle, Search, Plus } from "lucide-react";
 42 │ import { useEffect, useState } from "react";
 43 │ import { useAuth } from "@/contexts/auth-context";
 44 │ 
 45 │ export default function MessagesPage() {
    ·                         ──────┬─────
    ·                               ╰── `MessagesPage` redefined here
 46 │   const { user } = useAuth();
 47 │   const [conversations, setConversations] = useState([]);
 48 │   const [searchQuery, setSearchQuery] = useState("");
    ╰────

  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/app/messages/page.tsx:5:1]
   5 │     import { ChatList } from "@/components/chat/chat-list";
   6 │     import { ChatWindow } from "@/components/chat/chat-window";
   7 │     
   8 │ ╭─▶ export default function MessagesPage() {
   9 │ │     const { user } = useAuth();
  10 │ │     const [selectedChat, setSelectedChat] = useState<string | null>(null);
  11 │ │   
  12 │ │     if (!user) {
  13 │ │       return (
  14 │ │         <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
  15 │ │           <p>Please sign in to access messages</p>
  16 │ │         </div>
  17 │ │       );
  18 │ │     }
  19 │ │   
  20 │ │     return (
  21 │ │       <div className="grid grid-cols-1 md:grid-cols-[300px_1fr]">
  22 │ │         <div className="border-r">
  23 │ │           <ChatList onSelectChat={setSelectedChat} />
  24 │ │         </div>
  25 │ │         <div>
  26 │ │           {selectedChat ? (
  27 │ │             <ChatWindow conversationId={selectedChat} />
  28 │ │           ) : (
  29 │ │             <div className="flex items-center justify-center h-[calc(100vh-4rem)]">
  30 │ │               <p className="text-muted-foreground">Select a conversation to start chatting</p>
  31 │ │             </div>
  32 │ │           )}
  33 │ │         </div>
  34 │ │       </div>
  35 │ │     );
  36 │ ├─▶ }
     · ╰──── previous exported here
  37 │     "use client";
  38 │     
  39 │     import { Button } from "@/components/ui/button";
  40 │     import { Input } from "@/components/ui/input";
  41 │     import { MessageCircle, Search, Plus } from "lucide-react";
  42 │     import { useEffect, useState } from "react";
  43 │     import { useAuth } from "@/contexts/auth-context";
  44 │     
  45 │ ╭─▶ export default function MessagesPage() {
  46 │ │     const { user } = useAuth();
  47 │ │     const [conversations, setConversations] = useState([]);
  48 │ │     const [searchQuery, setSearchQuery] = useState("");
  49 │ │   
  50 │ │     useEffect(() => {
  51 │ │       if (user) {
  52 │ │         // Fetch conversations for the current user
  53 │ │         fetchConversations();
  54 │ │       }
  55 │ │     }, [user]);
  56 │ │   
  57 │ │     const fetchConversations = async () => {
  58 │ │       // TODO: Implement conversation fetching
  59 │ │     };
  60 │ │   
  61 │ │     return (
  62 │ │       <div className="container flex h-[calc(100vh-4rem)] gap-6 py-6">
  63 │ │         {/* Sidebar */}
  64 │ │         <div className="w-80 flex flex-col border-r pr-6">
  65 │ │           <div className="flex items-center justify-between mb-4">
  66 │ │             <h2 className="text-2xl font-semibold">Messages</h2>
  67 │ │             <Button size="icon" variant="ghost">
  68 │ │               <Plus className="h-5 w-5" />
  69 │ │             </Button>
  70 │ │           </div>
  71 │ │           
  72 │ │           <div className="relative mb-4">
  73 │ │             <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
  74 │ │             <Input
  75 │ │               type="search"
  76 │ │               placeholder="Search messages..."
  77 │ │               className="pl-8"
  78 │ │               value={searchQuery}
  79 │ │               onChange={(e) => setSearchQuery(e.target.value)}
  80 │ │             />
  81 │ │           </div>
  82 │ │   
  83 │ │           <div className="flex-1 overflow-auto">
  84 │ │             {/* Placeholder conversations */}
  85 │ │             {[1, 2, 3].map((i) => (
  86 │ │               <div
  87 │ │                 key={i}
  88 │ │                 className="flex items-center gap-3 p-3 rounded-lg hover:bg-muted cursor-pointer"
  89 │ │               >
  90 │ │                 <div className="w-10 h-10 rounded-full bg-primary/10 flex items-center justify-center">
  91 │ │                   <MessageCircle className="h-5 w-5 text-primary" />
  92 │ │                 </div>
  93 │ │                 <div className="flex-1 min-w-0">
  94 │ │                   <p className="font-medium truncate">Conversation {i}</p>
  95 │ │                   <p className="text-sm text-muted-foreground truncate">
  96 │ │                     Latest message preview...
  97 │ │                   </p>
  98 │ │                 </div>
  99 │ │               </div>
 100 │ │             ))}
 101 │ │           </div>
 102 │ │         </div>
 103 │ │   
 104 │ │         {/* Main chat area */}
 105 │ │         <div className="flex-1 flex flex-col">
 106 │ │           <div className="flex-1 flex items-center justify-center text-muted-foreground">
 107 │ │             Select a conversation or start a new one
 108 │ │           </div>
 109 │ │         </div>
 110 │ │       </div>
 111 │ │     );
 112 │ ├─▶ }
     · ╰──── exported more than once
     ╰────

Error: 
  ☞ Exported identifiers must be unique

  × The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ╭─[/home/runner/workspace/app/messages/page.tsx:34:1]
 34 │     </div>
 35 │   );
 36 │ }
 37 │ "use client";
    · ─────────────
 38 │ 
 39 │ import { Button } from "@/components/ui/button";
 40 │ import { Input } from "@/components/ui/input";
    ╰────
This error occurred during the build process and can only be dismissed by fixing the error.