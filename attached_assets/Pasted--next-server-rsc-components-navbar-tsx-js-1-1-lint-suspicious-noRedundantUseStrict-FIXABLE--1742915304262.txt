
./.next/server/_rsc_components_navbar_tsx.js:1:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━

  ✖ Redundant use strict directive.
  
  > 1 │ "use strict";
      │ ^^^^^^^^^^^^^
    2 │ /*
    3 │  * ATTENTION: An "eval-source-map" devtool has been used.
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
    1 │ "use·strict";
      │ -------------

./.next/server/_rsc_components_navbar_tsx.js:27:14 lint/style/noCommaOperator ━━━━━━━━━━━━━━━━━━━━━━

  ✖ The comma operator is disallowed.
  
  > 27 │ const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/home/runner/workspace/components/navbar.tsx#Navbar`);
       │              ^
    28 │ 
  
  ℹ Its use is often confusing and obscures side effects.
  

./.next/server/_rsc_components_navbar_tsx.js:24:22 lint/style/noVar  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━

  ✖ Use let or const instead of var.
  
    22 │ /* harmony export */   Navbar: () => (/* binding */ e0)
    23 │ /* harmony export */ });
  > 24 │ /* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");
       │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    25 │ 
  
  ℹ A variable declared with var is accessible in the whole body of the function. Thus, the variable can be accessed before its initialization and outside the block where it is declared.
  
  ℹ See MDN web docs for more details.
  
  ℹ Unsafe fix: Use 'const' instead.
  
    22 22 │   /* harmony export */   Navbar: () => (/* binding */ e0)
    23 23 │   /* harmony export */ });
    24    │ - /*·harmony·import·*/·var·next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__·=·__webpack_require__(/*!·next/dist/build/webpack/loaders/next-flight-loader/module-proxy·*/·"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");
       24 │ + /*·harmony·import·*/·const·next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__·=·__webpack_require__(/*!·next/dist/build/webpack/loaders/next-flight-loader/module-proxy·*/·"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");
    25 25 │   
    26 26 │   
  

./lib/update-schema.ts:4:23 lint/style/noNonNullAssertion ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Forbidden non-null assertion.
  
    3 │ const updateSchema = async () => {
  > 4 │   const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
      │                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    5 │   const supabaseServiceKey =
    6 │     process.env.SUPABASE_SERVICE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;
  

./lib/update-schema.ts:6:41 lint/style/noNonNullAssertion ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ⚠ Forbidden non-null assertion.
  
    4 │   const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
    5 │   const supabaseServiceKey =
  > 6 │     process.env.SUPABASE_SERVICE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;
      │                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │ 
    8 │   if (!supabaseUrl || !supabaseServiceKey) {
  

./.next/server/app/feed/page.js:21:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    19 │ /***/ ((module) => {
    20 │ 
  > 21 │ "use strict";
       │ ^^^^^^^^^^^^^
    22 │ module.exports = require("next/dist/client/components/action-async-storage.external.js");
    23 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     18  18 │     \*******************************************************************************/
     19  19 │   /***/ ((module) => {
     20     │ - 
     21     │ - "use·strict";
     22  20 │   module.exports = require("next/dist/client/components/action-async-storage.external.js");
     23  21 │   
  

./.next/server/app/feed/page.js:32:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    30 │ /***/ ((module) => {
    31 │ 
  > 32 │ "use strict";
       │ ^^^^^^^^^^^^^
    33 │ module.exports = require("next/dist/client/components/request-async-storage.external.js");
    34 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     29  29 │     \********************************************************************************/
     30  30 │   /***/ ((module) => {
     31     │ - 
     32     │ - "use·strict";
     33  31 │   module.exports = require("next/dist/client/components/request-async-storage.external.js");
     34  32 │   
  

./.next/server/app/feed/page.js:43:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    41 │ /***/ ((module) => {
    42 │ 
  > 43 │ "use strict";
       │ ^^^^^^^^^^^^^
    44 │ module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");
    45 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     40  40 │     \******************************************************************************************/
     41  41 │   /***/ ((module) => {
     42     │ - 
     43     │ - "use·strict";
     44  42 │   module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");
     45  43 │   
  

./.next/server/app/feed/page.js:54:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    52 │ /***/ ((module) => {
    53 │ 
  > 54 │ "use strict";
       │ ^^^^^^^^^^^^^
    55 │ module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");
    56 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     51  51 │     \*************************************************************************/
     52  52 │   /***/ ((module) => {
     53     │ - 
     54     │ - "use·strict";
     55  53 │   module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");
     56  54 │   
  

./.next/server/app/feed/page.js:65:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    63 │ /***/ ((module) => {
    64 │ 
  > 65 │ "use strict";
       │ ^^^^^^^^^^^^^
    66 │ module.exports = require("buffer");
    67 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     62  62 │     \*************************/
     63  63 │   /***/ ((module) => {
     64     │ - 
     65     │ - "use·strict";
     66  64 │   module.exports = require("buffer");
     67  65 │   
  

./.next/server/app/feed/page.js:66:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━

  ✖ A Node.js builtin module should be imported with the node: protocol.
  
    65 │ "use strict";
  > 66 │ module.exports = require("buffer");
       │                          ^^^^^^^^
    67 │ 
    68 │ /***/ }),
  
  ℹ Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  ℹ Unsafe fix: Add the node: protocol.
  
     64  64 │   
     65  65 │   "use strict";
     66     │ - module.exports·=·require("buffer");
         66 │ + module.exports·=·require("node:buffer");
     67  67 │   
     68  68 │   /***/ }),
  

./.next/server/app/feed/page.js:76:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    74 │ /***/ ((module) => {
    75 │ 
  > 76 │ "use strict";
       │ ^^^^^^^^^^^^^
    77 │ module.exports = require("crypto");
    78 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     73  73 │     \*************************/
     74  74 │   /***/ ((module) => {
     75     │ - 
     76     │ - "use·strict";
     77  75 │   module.exports = require("crypto");
     78  76 │   
  

./.next/server/app/feed/page.js:77:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━

  ✖ A Node.js builtin module should be imported with the node: protocol.
  
    76 │ "use strict";
  > 77 │ module.exports = require("crypto");
       │                          ^^^^^^^^
    78 │ 
    79 │ /***/ }),
  
  ℹ Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  ℹ Unsafe fix: Add the node: protocol.
  
     75  75 │   
     76  76 │   "use strict";
     77     │ - module.exports·=·require("crypto");
         77 │ + module.exports·=·require("node:crypto");
     78  78 │   
     79  79 │   /***/ }),
  

./.next/server/app/feed/page.js:87:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    85 │ /***/ ((module) => {
    86 │ 
  > 87 │ "use strict";
       │ ^^^^^^^^^^^^^
    88 │ module.exports = require("events");
    89 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     84  84 │     \*************************/
     85  85 │   /***/ ((module) => {
     86     │ - 
     87     │ - "use·strict";
     88  86 │   module.exports = require("events");
     89  87 │   
  

./.next/server/app/feed/page.js:88:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━

  ✖ A Node.js builtin module should be imported with the node: protocol.
  
    87 │ "use strict";
  > 88 │ module.exports = require("events");
       │                          ^^^^^^^^
    89 │ 
    90 │ /***/ }),
  
  ℹ Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  ℹ Unsafe fix: Add the node: protocol.
  
     86  86 │   
     87  87 │   "use strict";
     88     │ - module.exports·=·require("events");
         88 │ + module.exports·=·require("node:events");
     89  89 │   
     90  90 │   /***/ }),
  

./.next/server/app/feed/page.js:98:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
     96 │ /***/ ((module) => {
     97 │ 
   > 98 │ "use strict";
        │ ^^^^^^^^^^^^^
     99 │ module.exports = require("http");
    100 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
     95  95 │     \***********************/
     96  96 │   /***/ ((module) => {
     97     │ - 
     98     │ - "use·strict";
     99  97 │   module.exports = require("http");
    100  98 │   
  

./.next/server/app/feed/page.js:99:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━

  ✖ A Node.js builtin module should be imported with the node: protocol.
  
     98 │ "use strict";
   > 99 │ module.exports = require("http");
        │                          ^^^^^^
    100 │ 
    101 │ /***/ }),
  
  ℹ Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  ℹ Unsafe fix: Add the node: protocol.
  
     97  97 │   
     98  98 │   "use strict";
     99     │ - module.exports·=·require("http");
         99 │ + module.exports·=·require("node:http");
    100 100 │   
    101 101 │   /***/ }),
  

./.next/server/app/feed/page.js:109:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    107 │ /***/ ((module) => {
    108 │ 
  > 109 │ "use strict";
        │ ^^^^^^^^^^^^^
    110 │ module.exports = require("https");
    111 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
    106 106 │     \************************/
    107 107 │   /***/ ((module) => {
    108     │ - 
    109     │ - "use·strict";
    110 108 │   module.exports = require("https");
    111 109 │   
  

./.next/server/app/feed/page.js:110:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━

  ✖ A Node.js builtin module should be imported with the node: protocol.
  
    109 │ "use strict";
  > 110 │ module.exports = require("https");
        │                          ^^^^^^^
    111 │ 
    112 │ /***/ }),
  
  ℹ Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  ℹ Unsafe fix: Add the node: protocol.
  
    108 108 │   
    109 109 │   "use strict";
    110     │ - module.exports·=·require("https");
        110 │ + module.exports·=·require("node:https");
    111 111 │   
    112 112 │   /***/ }),
  

./.next/server/app/feed/page.js:120:1 lint/suspicious/noRedundantUseStrict  FIXABLE  ━━━━━━━━━━━━━━━

  ✖ Redundant use strict directive.
  
    118 │ /***/ ((module) => {
    119 │ 
  > 120 │ "use strict";
        │ ^^^^^^^^^^^^^
    121 │ module.exports = require("net");
    122 │ 
  
  ℹ The entire contents of JavaScript modules are automatically in strict mode, with no statement needed to initiate it.
  
  ℹ Safe fix: Remove the redundant use strict directive.
  
    117 117 │     \**********************/
    118 118 │   /***/ ((module) => {
    119     │ - 
    120     │ - "use·strict";
    121 119 │   module.exports = require("net");
    122 120 │   
  

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 5029.
Checked 211 files in 395ms. No fixes applied.
Found 509 errors.
Found 90 warnings.
lint ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ✖ Some errors were emitted while running checks.
  
